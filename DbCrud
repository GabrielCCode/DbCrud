using Newtonsoft.Json;
using System.Data.SqlClient;

internal class Program
{
    // todo criar o crud para informações do banco, criar o banco Pessoa com Id, Nome, Status e Telefone
    const string connectString = "Server=DESKTOP-DB5M39P;Database=Cadastro;User Id=sa;Password=Vector5**;";
    private static void Main(string[] args)
    {
        List<Pessoa> pessoas = new();

        while (true)
        {
            Console.WriteLine("" +
                "\n(1) Adicionar um usuário" +
                "\n(2) Listar os usuários cadastrados" +
                "\n(3) Atualizar o cadastro de um usuário" +
                "\n(4) Deletar o cadastro de um usuário" +
                "\n(0) Encerrar o programa");

            Console.WriteLine("\nSelecione a operação desejada: ");
            string opcao = Console.ReadLine();

            switch (opcao)
            {
                case "1":
                    CriarUser(pessoas);
                    break;
                case "2":
                    ListarUser(pessoas);
                    break;
                case "3":
                    AtualizarUser(pessoas);
                    break;
                case "4":
                    DeletarUser(pessoas);
                    break;
                case "0":
                    Console.WriteLine("Saindo e encerrando programa.");
                    return;
                default:
                    Console.WriteLine("Você digitou uma opção inválida!");
                    break;
            }
        }
    }

    static void CriarUser(List<Pessoa> pessoas)
    {
        using (SqlConnection connect = new(connectString))
        {
            connect.Open();
            string query = "declare @id int = (select isnull(max(id)+1,1) from Pessoas)\r\ndeclare @status bit = 'true'\r\n \r\ninsert into Pessoas \r\n(\r\n\tNome,\r\n\tStatus,\r\n\tTelefone,\r\n\tId\r\n) values \r\n(\r\n\t@nome,\r\n\t@status,\r\n\t@telefone,\r\n\t@id\r\n)";
            using (SqlCommand command = new(query, connect))
            {
                Pessoa pessoa = new();
                Console.WriteLine("Digite o nome do novo usuário: ");
                pessoa.nome = Console.ReadLine();
                Console.WriteLine("Digite o telefone(Celular) do usuário: ");
                pessoa.telefone = Console.ReadLine();
                if(pessoa.telefone.Length != 11)
                {
                    Console.WriteLine("Por favor, digite um número de celular válido (11 Digitos) ");
                    Console.WriteLine("Digite o telefone do usuário: ");
                    pessoa.telefone = Console.ReadLine();
                }
                int status = 1;
                int id;
                pessoa.status = status;
                pessoas.Add(pessoa);

                command.Parameters.AddWithValue("@nome", pessoa.nome);
                command.Parameters.AddWithValue("@telefone", string.IsNullOrEmpty(pessoa.telefone) ? DBNull.Value : pessoa.telefone);

                command.ExecuteNonQuery();
                Console.WriteLine("Usuário cadastrado com sucesso.");
            }

            connect.Close();
        }
    }
    static void ListarUser(List<Pessoa> pessoas)
    {
        using (SqlConnection connect = new(connectString))
        {
            connect.Open();
            string query = @"SELECT id, nome, status, telefone FROM Pessoas";
            using (SqlCommand command = new(query, connect))
            {
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    pessoas.Clear();
                    while (reader.Read())
                    {
                        Pessoa pessoa = new()
                        {
                            id = Convert.ToInt32(reader["id"]),
                            nome = reader["nome"].ToString(),
                            status = Convert.ToInt32(reader["status"]),
                            telefone = (reader["telefone"] ?? "").ToString()
                        };
                        pessoas.Add(pessoa);
                    }
                }
                Console.WriteLine("Lista de usuários já cadastrados: ");
                Console.WriteLine(JsonConvert.SerializeObject(new { pessoas }, Formatting.Indented));
            }
            connect.Close();
        }
    }
    static void AtualizarUser(List<Pessoa> pessoas)
    {
        ListarUser(pessoas);
        Console.WriteLine("Digite o ID do usuário que você deseja atualizar: ");
        if (int.TryParse(Console.ReadLine(), out int id))
        {
            using (SqlConnection connect = new(connectString))
            {
                connect.Open();
                string query = "SELECT id, nome, status, telefone FROM Pessoas WHERE id = @id";
                Pessoa pessoa = null;
                using (SqlCommand command = new(query, connect))
                {
                    command.Parameters.AddWithValue("@id", id);
                    using (SqlDataReader reader = command.ExecuteReader())
                    {
                        if (reader.Read())
                        {
                            pessoa = new Pessoa
                            {
                                id = Convert.ToInt32(reader["id"]),
                                nome = reader["nome"].ToString(),
                                status = Convert.ToInt32(reader["status"]),
                                telefone = reader["telefone"].ToString()
                            };
                        }
                    }
                }
                if (pessoa is not null)
                {
                    Console.WriteLine($"O ID selecionado foi {id}");
                    Console.WriteLine($"O nome atual é: {pessoa.nome}");
                    Console.Write("Digite o novo nome do usuário: ");
                    string novoNome = Console.ReadLine();
                    Console.WriteLine($"O Número de Telefone atual é: {pessoa.telefone}");
                    Console.Write("Digite o novo telefone do usuário: ");
                    string novoTelefone = Console.ReadLine();

                    if(novoTelefone.Length != 11)
                    {
                        Console.WriteLine("O número de celular não possui 11 digitos, por favor digite um número válido.");
                        Console.Write("Digite o telefone do usuário: ");
                        string NovoTelefone = Console.ReadLine();
                        novoTelefone = NovoTelefone;
                    }

                    query = "UPDATE Pessoas SET nome = @nome, telefone = @telefone WHERE id = @id";
                    using (SqlCommand command = new(query, connect))
                    {
                        command.Parameters.AddWithValue("@id", id);
                        command.Parameters.AddWithValue("@nome", novoNome);
                        command.Parameters.AddWithValue("@telefone", novoTelefone ?? (object)DBNull.Value);

                        int atualizaLinha = command.ExecuteNonQuery();
                        Console.WriteLine(atualizaLinha > 0 ? "Usuário atualizado com sucesso." : "Erro ao deletar o usuário.");
                        connect.Close();
                        return;
                    }
                }
                Console.WriteLine("O ID digitado não existe.");
            }
        }
        else { Console.WriteLine("ID inválido."); }
    }
    static void DeletarUser(List<Pessoa> pessoas)
    {
        ListarUser(pessoas);
        Console.WriteLine("Digite o ID do usuário que você deseja deletar: ");
        if (int.TryParse(Console.ReadLine(), out int id))
        {

            using (SqlConnection connect = new(connectString))
            {
                connect.Open();
                string query = "SELECT id FROM Pessoas WHERE id = @id";
                Pessoa pessoa = null;
                using (SqlCommand command = new(query, connect))
                {
                    command.Parameters.AddWithValue("@id", id);
                    using (SqlDataReader reader = command.ExecuteReader())
                    {
                        if (reader.Read())
                        {
                            pessoa = new Pessoa
                            {
                                id = Convert.ToInt32(reader["id"])
                            };
                        }
                    }
                }
                if (pessoa is not null)
                {
                    query = "DELETE FROM Pessoas WHERE id = @id";
                    using (SqlCommand command = new(query, connect))
                    {
                        command.Parameters.AddWithValue("@id", id);
                        int deletaLinha = command.ExecuteNonQuery();
                        Console.WriteLine(deletaLinha > 0 ? "Usuário deletado com sucesso." : "Erro ao deletar o usuário.");
                    }
                }
                connect.Close();
            }
        }
        else { Console.WriteLine("Digite um valor válido."); }
    }
    public class Pessoa
    {
        public int id { get; set; }
        public string? nome { get; set; }
        public string? telefone { get; set; }
        public int status { get; set; }
    }
}
